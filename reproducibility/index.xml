<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reproducibility on SC1</title>
    <link>https://awllee.github.io/sc1/reproducibility/</link>
    <description>Recent content in Reproducibility on SC1</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://awllee.github.io/sc1/reproducibility/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reproducible research</title>
      <link>https://awllee.github.io/sc1/reproducibility/reproducibile-research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/sc1/reproducibility/reproducibile-research/</guid>
      <description>A big computer, a complex algorithm and a long time does not equal science.
&amp;ndash; Robert Gentleman. SSC 2003, Halifax.
 Reproducible research refers to being able to reproduce the analysis and conclusions of a particular investigation given the same raw data. When the analysis requires significant computation, this requires being able to recreate the same computational environment and run the same code on the data.
It may be surprising that a lot of science involving computation is not reproducible.</description>
    </item>
    
    <item>
      <title>Literate programming</title>
      <link>https://awllee.github.io/sc1/reproducibility/literate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/sc1/reproducibility/literate/</guid>
      <description>Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.
â€“ Donald E. Knuth
 Literate programming was introduced by Donald Knuth in a 1984 article featuring the quote above.
In practice, literate programming involves writing source code that can be processed to produce
a document explaining what the program does, a program that can be executed.</description>
    </item>
    
    <item>
      <title>Literate programming with LaTeX and LyX</title>
      <link>https://awllee.github.io/sc1/reproducibility/latex-lyx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/sc1/reproducibility/latex-lyx/</guid>
      <description>It is straightforward to incorporate R code chunks in LaTeX using knitr.
For example, you can take the following code and paste it into a file with extension .Rnw. After doing so, you can open it with RStudio.
Before trying to compile the file (by clicking &amp;ldquo;Compile PDF&amp;rdquo;), first check in your global or project options that under the &amp;ldquo;Sweave&amp;rdquo; menu, &amp;ldquo;Weave Rnw files using:&amp;rdquo; is set to &amp;ldquo;knitr&amp;rdquo;. Otherwise, Sweave will be used, which requires a few modifications to the input file.</description>
    </item>
    
    <item>
      <title>Additional reading</title>
      <link>https://awllee.github.io/sc1/reproducibility/reading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/sc1/reproducibility/reading/</guid>
      <description> Turing Way: Reproducibility Literate Programming SW Carpentry: Producing Reports With knitr R Markdown: The Definitive Guide  </description>
    </item>
    
  </channel>
</rss>
